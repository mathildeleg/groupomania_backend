datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  userId          Int       @id @default(autoincrement())  
  admins          Administrator[]
  userForums      UserForum[]
  posts           Post[]
  likes           UserLike[]
  comments        Comment[]
  userProfile     UserProfile @relation(fields: [profileId], references: [profileId])
  profileId       Int
}

model UserProfile {
  profileId       Int       @id @default(autoincrement()) 
  email           String    @unique
// password      String    @unique
  firstName       String
  lastName        String            
  user            User?
}

model Administrator {
  adminId         Int       @id @default(autoincrement()) 
  user            User      @relation(fields: [userId], references: [userId])
  userId          Int       
}

model UserForum {
  id              Int       @id @default(autoincrement()) 
  forum           Forum     @relation(fields: [forumId], references: [forumId])
  forumId         Int       
  user            User      @relation(fields: [userId], references: [userId])
  userId          Int         
}

model Forum {
  forumId         Int       @id @default(autoincrement()) 
  userForums      UserForum[]
  posts           Post[]
  title           String
  description     String
  createdAt       DateTime  @default(now())
}

model Post {
  postId          Int       @id @default(autoincrement()) 
  user            User      @relation(fields: [creatorId], references: [userId])
  creatorId       Int       
  forum           Forum     @relation(fields: [forumId], references: [forumId])
  forumId         Int       
  content         Content   @relation(fields: [contentId], references: [contentId])
  contentId       Int
  userLikes       UserLike[]
  userComments    Comment[]
  createdAt       DateTime  @default(now())
}

model Content {
  contentId       Int       @id @default(autoincrement()) 
  postMessage     String
  post            Post?     
  contentUrl      ContentUrl?
  contentImg      ContentImage?
}

model ContentUrl {
  id              Int       @id @default(autoincrement()) 
  contentUrl      String
  content         Content   @relation(fields: [contentId], references: [contentId])
  contentId       Int       
}

model ContentImage {
  id              Int       @id @default(autoincrement()) 
  image_path      String
  content         Content   @relation(fields: [contentId], references: [contentId])
  contentId       Int       
}

model UserLike{
  likeId          Int       @id @default(autoincrement()) 
  user            User      @relation(fields: [likerId], references: [userId])
  likerId         Int       
  post            Post      @relation(fields: [postId], references: [postId])
  postId          Int       
  createdAt       DateTime  @default(now())
}

model Comment{
  commentId       Int       @id @default(autoincrement()) 
  user            User      @relation(fields: [commenterId], references: [userId])
  commenterId     Int       
  post            Post      @relation(fields: [postId], references: [postId])
  postId          Int       
  commentMessage  String
  createdAt       DateTime  @default(now())
}